{
  "ns": "clojure.core",
  "name": "def",
  "type": "var",
  "see-alsos": [
    {
      "created-at": 1289040035000,
      "author": {
        "login": "boxie",
        "account-source": "clojuredocs",
        "avatar-url": "https://www.gravatar.com/avatar/bfc366066e3c1beee98f3a6666728169?r=PG&default=identicon"
      },
      "to-var": {
        "ns": "clojure.core",
        "name": "defn",
        "library-url": "https://github.com/clojure/clojure"
      },
      "_id": "542692eaf6e94c6970521b15"
    },
    {
      "created-at": 1289040039000,
      "author": {
        "login": "boxie",
        "account-source": "clojuredocs",
        "avatar-url": "https://www.gravatar.com/avatar/bfc366066e3c1beee98f3a6666728169?r=PG&default=identicon"
      },
      "to-var": {
        "ns": "clojure.core",
        "name": "fn",
        "library-url": "https://github.com/clojure/clojure"
      },
      "_id": "542692eaf6e94c6970521b16"
    },
    {
      "created-at": 1289040051000,
      "author": {
        "login": "boxie",
        "account-source": "clojuredocs",
        "avatar-url": "https://www.gravatar.com/avatar/bfc366066e3c1beee98f3a6666728169?r=PG&default=identicon"
      },
      "to-var": {
        "ns": "clojure.core",
        "name": "defmacro",
        "library-url": "https://github.com/clojure/clojure"
      },
      "_id": "542692eaf6e94c6970521b17"
    },
    {
      "created-at": 1289040055000,
      "author": {
        "login": "boxie",
        "account-source": "clojuredocs",
        "avatar-url": "https://www.gravatar.com/avatar/bfc366066e3c1beee98f3a6666728169?r=PG&default=identicon"
      },
      "to-var": {
        "ns": "clojure.core",
        "name": "defmulti",
        "library-url": "https://github.com/clojure/clojure"
      },
      "_id": "542692eaf6e94c6970521b18"
    },
    {
      "created-at": 1421928720188,
      "author": {
        "login": "Gitward",
        "account-source": "github",
        "avatar-url": "https://avatars.githubusercontent.com/u/8510849?v=3"
      },
      "to-var": {
        "ns": "clojure.core",
        "name": "defonce",
        "library-url": "https://github.com/clojure/clojure"
      },
      "_id": "54c0e910e4b0e2ac61831cce"
    },
    {
      "created-at": 1426949770053,
      "author": {
        "login": "ryoakg",
        "account-source": "github",
        "avatar-url": "https://avatars.githubusercontent.com/u/23413?v=3"
      },
      "to-var": {
        "ns": "clojure.core",
        "name": "ns-unmap",
        "library-url": "https://github.com/clojure/clojure"
      },
      "_id": "550d868ae4b056ca16cfecf8"
    }
  ],
  "examples": [
    {
      "author": {
        "login": "boxie",
        "account-source": "clojuredocs",
        "avatar-url": "https://www.gravatar.com/avatar/bfc366066e3c1beee98f3a6666728169?r=PG&default=identicon"
      },
      "editors": [
        {
          "login": "zk",
          "account-source": "github",
          "avatar-url": "https://avatars.githubusercontent.com/u/7194?v=2"
        }
      ],
      "body": "user=> (def my-val 5)\n#'user/my-val\n\nuser=> my-val\n5",
      "created-at": 1289040027000,
      "updated-at": 1411962925119,
      "_id": "542692cfc026201cdc326e95"
    },
    {
      "author": {
        "login": "boxie",
        "account-source": "clojuredocs",
        "avatar-url": "https://www.gravatar.com/avatar/bfc366066e3c1beee98f3a6666728169?r=PG&default=identicon"
      },
      "editors": [],
      "body": "user=> (def my-function (fn [x] (* x x x)))\n#'user/my-function\nuser=> (my-function 4)\n64",
      "created-at": 1289040110000,
      "updated-at": 1289040110000,
      "_id": "542692cfc026201cdc326e96"
    },
    {
      "author": {
        "login": "puredanger",
        "account-source": "clojuredocs",
        "avatar-url": "https://www.gravatar.com/avatar/89c8afd032c7b3473f67c9b00d3acd5a?r=PG&default=identicon"
      },
      "editors": [
        {
          "login": "puredanger",
          "account-source": "clojuredocs",
          "avatar-url": "https://www.gravatar.com/avatar/89c8afd032c7b3473f67c9b00d3acd5a?r=PG&default=identicon"
        },
        {
          "login": "pjlegato",
          "account-source": "clojuredocs",
          "avatar-url": "https://www.gravatar.com/avatar/4ce55cfd8b3ae2f63f5ecbc8fc1c05d4?r=PG&default=identicon"
        },
        {
          "login": "pjlegato",
          "account-source": "clojuredocs",
          "avatar-url": "https://www.gravatar.com/avatar/4ce55cfd8b3ae2f63f5ecbc8fc1c05d4?r=PG&default=identicon"
        },
        {
          "login": "zk",
          "account-source": "github",
          "avatar-url": "https://avatars.githubusercontent.com/u/7194?v=2"
        }
      ],
      "body": ";; This is an example of setting a docstring during a def.\n;; (Note that the clojure.repl namespace which contains the\n;;  doc function is not loaded by default in Emacs' SLIME mode.)\n\nuser> (def ted-nugent \"The nuge rocks\" 123)\n#'user/ted-nugent\nuser> (doc ted-nugent)\n-------------------------\nuser/ted-nugent\n  The nuge rocks\nuser> ted-nugent\n123\n",
      "created-at": 1300830366000,
      "updated-at": 1411962895678,
      "_id": "542692cfc026201cdc326e97"
    },
    {
      "author": {
        "login": "jamesqiu",
        "account-source": "clojuredocs",
        "avatar-url": "https://www.gravatar.com/avatar/bc1268deaa7f2e78fe2b5ea76e6481d8?r=PG&default=identicon"
      },
      "editors": [
        {
          "login": "jamesqiu",
          "account-source": "clojuredocs",
          "avatar-url": "https://www.gravatar.com/avatar/bc1268deaa7f2e78fe2b5ea76e6481d8?r=PG&default=identicon"
        },
        {
          "login": "zk",
          "account-source": "github",
          "avatar-url": "https://avatars.githubusercontent.com/u/7194?v=2"
        }
      ],
      "body": ";; give function another name\nuser=> (def sys-map map)\n\n;; give macro another name\nuser=> (def #^{:macro true} sys-loop #'loop)",
      "created-at": 1313515810000,
      "updated-at": 1411962917894,
      "_id": "542692cfc026201cdc326e9b"
    },
    {
      "updated-at": 1518778836326,
      "created-at": 1518778836326,
      "author": {
        "login": "ibercode",
        "account-source": "github",
        "avatar-url": "https://avatars0.githubusercontent.com/u/31028993?v=4"
      },
      "body": ";;Assign a Function to a Variable\n\n(def say-hello\n (fn [name]\n   (str \"Hello \" name)))\n\n(say-hello \"World\")\n;;\"Hello World\"\n\n\n;;the same but using an anonymous function\n(def say-hello\n #(str \"Hello \" %))\n\n(say-hello \"World\")\n;;\"Hello World\"\n\n\n;;anonymous function using two arguments\n(def hello-doc #(str \"Hello \" %1 %2))\n\n(hello-doc \"Dr.\" \"House\")\n;;\"Hello Dr.House\"\n\n",
      "_id": "5a86b9d4e4b0316c0f44f8c6"
    },
    {
      "updated-at": 1640101185494,
      "created-at": 1640101185494,
      "author": {
        "login": "deadghost",
        "account-source": "github",
        "avatar-url": "https://avatars.githubusercontent.com/u/1156996?v=4"
      },
      "body": ";; Private var\n(def ^:private foobar\n  \"I am the docstring.\"\n  \"I am the value.\")\n",
      "_id": "61c1f541e4b0b1e3652d758c"
    }
  ],
  "notes": null,
  "arglists": [],
  "doc": "Creates and interns or locates a global var with the name of symbol and a\nnamespace of the value of the current namespace (*ns*). See\nhttp://clojure.org/special_forms for more information.",
  "library-url": "https://github.com/clojure/clojure",
  "href": "/clojure.core/def"
}
